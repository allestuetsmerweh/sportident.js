{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/SiCard.js","webpack:///./src/SiMainStation.js","webpack:///./src/SiStation.js","webpack:///./src/constants.js","webpack:///./src/drivers/BaseDriver.js","webpack:///./src/drivers/WebUsb.js","webpack:///./src/drivers/index.js","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["SiCard","mainStation","cardNumber","clearTime","checkTime","startTime","finishTime","punches","typeFromCN","typeByCardNumber","Type","read","type","map","punch","code","time","join","toString","replace","SICard5","vals","description","card","_sendCommand","proto","cmd","GET_SI5","then","d","data","splice","cn","console","warn","slice","len","Math","min","max","Array","ind","i","ACK","SICard6","GET_SI6","blk","SICard8","undefined","GET_SI8","data0","assert","page0","data1","page1","SICard9","isLastBlock","SICard10","readSiCard10TimeBlock","blockData","punchData","blockIndex","punchCount","punchesPerBlock","data4","page4","is4LastBlock","data5","page5","is5LastBlock","data6","page6","is6LastBlock","data7","page7","SICard11","readSiCard11TimeBlock","SIAC","readSIACTimeBlock","PCard","_card","TCard","FCard","_typeLookup","borderList","borderLookup","Object","keys","k","length","Error","lastEvenVal","j","borderExisted","collidingRange","SendTask","command","parameters","numResponses","resolve","reject","timeout","state","State","QUEUED","timeoutTimer","setTimeout","SENT","debug","responses","fail","response","push","succeed","SUCCEEDED","clearTimeout","FAILED","SiMainStation","device","Closed","onMessage","onRemoved","onStateChanged","onCardInserted","onCard","onCardRemoved","_sendQueue","_respBuffer","_deviceOpenTimer","_deviceOpenNumErrors","allByDevice","ident","onAdded","err","_deviceOpen","f","args","newState","_changeState","Opening","driver","open","Starting","GET_MS","Ready","catch","error","_retryDeviceOpen","scheduleReopen","close","bufView","name","continueProcessing","_processReceiveBuffer","message","mode","NAK","SI5_DET","log","_dispatch","SI6_DET","SI8_DET","SI_REM","TRANS_REC","transRecordCard","addResponse","_processSendQueue","sendTask","bstr","String","fromCharCode","WAKEUP","bytes","Uint8Array","charCodeAt","send","buffer","numRespArg","timeoutArg","Promise","resolvedTask","shifted","shift","rejectedTask","SiStation","drivers","all","arr","deviceIdent","startDeviceDetection","runDeviceDetection","detect","detectionTimeout","newDevice","new","_ms","_info","_infoTime","_infoSubscribers","force","now","Date","getTime","GET_SYS_VAL","_raw","serialNumber","firmwareVersion","buildDate","deviceModel","modelLookup","memorySize","refreshRate","powerMode","batteryDate","batteryCapacity","backupPointer","concat","siCard6Mode","memoryOverflow","interval","wtf","program","modeLookup","beeps","flashes","extendedProtocol","autoSend","handshake","sprint4ms","passwordOnly","stopOnFullBackup","autoReadout","lastWriteDate","autoOffTimeout","infoSubscriber","_err","newTime","GET_TIME","secs","getHours","getMinutes","getSeconds","params","getFullYear","getMonth","getDate","getDay","floor","getMilliseconds","SET_TIME","countArg","count","SIGNAL","OFF","property","paramsFunc","newValue","readInfo","info","SET_SYS_VAL","newCode","newMode","newModeVal","hasOwnProperty","val","newBeeps","newFlashes","newAutoSend","newExtendedProtocol","_modeLookup","Mode","_modelLookup","Model","SIACSpecialFunction1","Control","Start","Finish","Readout","Clear","Check","Print","StartWithTimeTrigger","FinishWithTimeTrigger","BCControl","BCStart","BCFinish","BCSlave","Main","Sprint","Field","Master","BSF3","series","BSF4","BSF5","BSF6","BSF7","BSF8","BS7Master","BS8Master","BSM4","BSM6","BSM7","BSM8","BS7S","BS7P","BS7GSM","BS8P","STX","ETX","DLE","basicCmd","SET_CARDNO","SI5_WRITE","TRANS_TIME","SET_MS","GET_BDATA","ERASE_BDATA","GET_BDATA2","SET_BAUD","basicCmdLookup","_basicCmdLookup","GET_BACKUP","SRR_WRITE","SRR_READ","SRR_QUERY","SRR_PING","SRR_ADHOC","CLEAR_CARD","SET_SI6","SET_SI6_SPECIAL","SET_SI8","cmdLookup","_cmdLookup","P_MS_DIRECT","P_MS_INDIRECT","P_SI6_CB","sysDataOffset","OLD_SERIAL","OLD_CPU_ID","SERIAL_NO","FIRMWARE","BUILD_DATE","MODEL_ID","MEM_SIZE","REFRESH_RATE","POWER_MODE","BAT_DATE","BAT_CAP","BACKUP_PTR","SI6_CB","BAT_STATE","MEM_OVERFLOW","INTERVAL","WTF","PROGRAM","MODE","STATION_CODE","PROTO","LAST_WRITE_DATE","LAST_WRITE_TIME","SLEEP_TIME","WORKING_TIME","M_CONTROL","M_START","M_FINISH","M_READ_SICARDS","M_CLEAR","M_CHECK","M_PRINTOUT","D_SUNDAY","D_MONDAY","D_TUESDAY","D_WEDNESDAY","D_THURSDAY","D_FRIDAY","D_SATURDAY","REC_LEN","T_OFFSET","T_CN","T_TIME","BC_CN","BC_TIME","BaseDriver","_MainStation","_mainStation","_buffer","siConfiguration","siInterface","siAlternate","siEndpoint","siPacketSize","siDeviceFilters","vendorId","productId","WebUsb","MainStation","navigator","usb","requestDevice","filters","selectedDevice","productName","_device","getDevices","devices","matchesSiDeviceFilter","findIndex","filter","_reject","dev","_receiveLoop","transferIn","_logReceive","_remove","reset","selectConfiguration","claimInterface","selectAlternateInterface","controlTransferOut","requestType","recipient","request","value","index","releaseInterface","transferOut","default","constants","utils","si","Station","Card","onLoad","window","addEventListener","isByte","byte","Number","arr2big","outnum","pow","arr2time","arr2date","UTC","arr2cardNumber","cardnum","fourthSet","prettyHex","input","out","toUpperCase","convertToArray","iterable","call","paddedStr","CRC16","str","CRC_POLYNOM","CRC_BITF","s","crc","c","processSiProto","inputData","crcContent","buildSiProtoCommand","commandString","timeoutResolvePromise","timeoutRejectPromise","reason"],"mappings":"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","file":"si.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {arr2big, arr2time} from './utils';\nimport {proto} from './constants';\n\nexport class SiCard {\n    constructor(mainStation, cardNumber) {\n        this.mainStation = mainStation;\n        this.cardNumber = cardNumber;\n        this.clearTime = -1;\n        this.checkTime = -1;\n        this.startTime = -1;\n        this.finishTime = -1;\n        this.punches = [];\n    }\n\n    read() {\n        var typeFromCN = SiCard.typeByCardNumber(this.cardNumber);\n        return SiCard.Type[typeFromCN].read(this);\n    }\n\n    type() {\n        return SiCard.typeByCardNumber(this.cardNumber);\n    }\n\n    toDict() {\n        return {\n            cardNumber: this.cardNumber,\n            clearTime: this.clearTime,\n            checkTime: this.checkTime,\n            startTime: this.startTime,\n            finishTime: this.finishTime,\n            punches: this.punches,\n        };\n    }\n\n    toString() {\n        return `${this.type()} Number: ${this.cardNumber}\nClear: ${this.clearTime}\nCheck: ${this.checkTime}\nStart: ${this.startTime}\nFinish: ${this.finishTime}\n${this.punches.map((punch) => `${punch.code}: ${punch.time}`).join('\\n')}\n`;\n    }\n\n    toHtml() {\n        return this.toString().replace(/\\n/g, '<br />');\n    }\n}\nSiCard.Type = {\n    SICard5: {\n        vals: [1000, 500000],\n        description: 'SI Card 5',\n        read: (card) => card.mainStation._sendCommand(proto.cmd.GET_SI5, [], 1)\n            .then((d) => {\n                const data = d[0];\n                data.splice(0, 2);\n                var cn = arr2big([data[6], data[4], data[5]]);\n                if (499999 < cn) { console.warn(`SICard5 Error: SI Card Number inconsistency: SI5 detected, but number is ${cn} (not in 0 - 500'000)`); }\n                if (data[6] < 2) {\n                    cn = arr2big([data[4], data[5]]);\n                } else {\n                    cn = data[6] * 100000 + arr2big([data[4], data[5]]);\n                }\n                if (card.cardNumber !== cn) { console.warn('SICard5 Error: SI Card Number inconsistency'); }\n\n                card.startTime = arr2time(data.slice(19, 21));\n                card.finishTime = arr2time(data.slice(21, 23));\n                card.checkTime = arr2time(data.slice(25, 27));\n                // TODO: also read the 6(?) additional punch codes without times\n                var len = Math.min(Math.max(data[23] - 1, 0), 30);\n                card.punches = new Array(len);\n                var ind = 32;\n                for (var i = 0; i < len; i++) {\n                    if ((ind % 16) === 0) {\n                        ind++;\n                    }\n                    var time = arr2time(data.slice(ind + 1, ind + 3));\n                    if (0 <= time) {\n                        card.punches[i] = {code: data[ind + 0], time: time};\n                    } else {\n                        console.warn('SICard5 Error: Undefined Time in punched range');\n                    }\n                    ind += 3;\n                }\n                card.mainStation._sendCommand(proto.ACK, [], 0);\n                return card;\n            }),\n    },\n    SICard6: {\n        vals: [500000, 1000000, 2003000, 2004000],\n        description: 'SI Card 6',\n        read: (card) => card.mainStation._sendCommand(proto.cmd.GET_SI6, [0x08], 3)\n            .then((data) => {\n                if (data[0][2] !== 0) { console.warn(`SICard6 Error: First read block is ${data[0][2]} (expected 0)`); }\n                if (data[1][2] !== 6) { console.warn(`SICard6 Error: Second read block is ${data[1][2]} (expected 6)`); }\n                if (data[2][2] !== 7) { console.warn(`SICard6 Error: Third read block is ${data[2][2]} (expected 7)`); }\n                data[0].splice(0, 3);\n                data[1].splice(0, 3);\n                data[2].splice(0, 3);\n                var cn = arr2big([data[0][11], data[0][12], data[0][13]]);\n                if (card.cardNumber !== cn) { console.warn('SICard6 Error: SI Card Number inconsistency'); }\n\n                card.startTime = arr2time(data[0].slice(26, 28));\n                card.finishTime = arr2time(data[0].slice(22, 24));\n                card.checkTime = arr2time(data[0].slice(30, 32));\n                card.clearTime = arr2time(data[0].slice(34, 36));\n                var len = Math.min(Math.max(data[0][18] - 1, 0), 64);\n                card.punches = new Array(len);\n                var blk = 1;\n                var ind = 0;\n                for (var i = 0; i < len; i++) {\n                    if (128 <= ind) {\n                        blk++;\n                        ind = 0;\n                    }\n                    var time = arr2time(data[blk].slice(ind + 2, ind + 4));\n                    if (0 <= time) {\n                        card.punches[i] = {code: data[blk][ind + 1], time: time};\n                    } else {\n                        console.warn('SICard6 Error: Undefined Time in punched range');\n                    }\n                    ind += 4;\n                }\n                card.mainStation._sendCommand(proto.ACK, [], 0);\n                return card;\n            }),\n    },\n    SICard8: {\n        vals: [2000000, 2003000, 2004000, 3000000],\n        description: 'SI Card 8',\n        read: (card) => {\n            let len = undefined;\n            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x00], 1)\n                .then((data0) => {\n                    console.assert(data0[0][2] === 0, 'Inconsistent');\n                    const page0 = data0[0].slice(3);\n                    var cn = arr2big([page0[25], page0[26], page0[27]]);\n                    if (card.cardNumber !== cn) {\n                        console.warn('SICard8 Error: SI Card Number inconsistency');\n                    }\n\n                    card.startTime = arr2time(page0.slice(14, 16));\n                    card.finishTime = arr2time(page0.slice(18, 20));\n                    card.checkTime = arr2time(page0.slice(10, 12));\n                    len = Math.min(Math.max(page0[22], 0), 128);\n                    card.punches = new Array(len);\n\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x01], 1);\n                })\n                .then((data1) => {\n                    console.assert(data1[0][2] === 1, 'Inconsistent');\n                    const page1 = data1[0].slice(3);\n                    for (let i = 0; i < 30; i++) {\n                        if (i >= len) {\n                            break;\n                        }\n                        var time = arr2time(page1.slice(i * 4 + 10, i * 4 + 12));\n                        if (0 <= time) {\n                            card.punches[i] = {\n                                code: page1[i * 4 + 9],\n                                time: time,\n                            };\n                        } else {\n                            console.warn('SICard8 Error: Undefined Time in punched range');\n                        }\n                    }\n                    return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                });\n        },\n    },\n    SICard9: {\n        vals: [1000000, 2000000],\n        description: 'SI Card 9',\n        read: (card) => {\n            let len = undefined;\n            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x00], 1)\n                .then((data0) => {\n                    console.assert(data0[0][2] === 0, 'Inconsistent');\n                    const page0 = data0[0].slice(3);\n                    var cn = arr2big([page0[25], page0[26], page0[27]]);\n                    if (card.cardNumber !== cn) {\n                        console.warn('SICard9 Error: SI Card Number inconsistency');\n                    }\n\n                    card.startTime = arr2time(page0.slice(14, 16));\n                    card.finishTime = arr2time(page0.slice(18, 20));\n                    card.checkTime = arr2time(page0.slice(10, 12));\n                    len = Math.min(Math.max(page0[22], 0), 128);\n                    card.punches = new Array(len);\n\n                    let isLastBlock = false;\n                    for (let i = 0; i < 18; i++) {\n                        if (i >= len) {\n                            isLastBlock = true;\n                            break;\n                        }\n                        const time = arr2time(page0.slice(i * 4 + 58, i * 4 + 60));\n                        if (0 <= time) {\n                            card.punches[i] = {\n                                code: page0[i * 4 + 57],\n                                time: time,\n                            };\n                        } else {\n                            console.warn('SICard9 Error: Undefined Time in punched range');\n                        }\n                    }\n                    if (isLastBlock) {\n                        return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                    }\n\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x01], 1).then((data1) => {\n                        console.assert(data1[0][2] === 1, 'Inconsistent');\n                        const page1 = data1[0].slice(3);\n                        for (let i = 18; i < 50; i++) {\n                            if (i >= len) {\n                                break;\n                            }\n                            const time = arr2time(page1.slice(i * 4 - 70, i * 4 - 68));\n                            if (0 <= time) {\n                                card.punches[i] = {\n                                    code: page1[i * 4 - 71],\n                                    time: time,\n                                };\n                            } else {\n                                console.warn('SICard9 Error: Undefined Time in punched range');\n                            }\n                        }\n                        return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                    });\n                });\n        },\n    },\n    SICard10: {\n        vals: [7000000, 8000000],\n        description: 'SI Card 10',\n        read: (card) => {\n            const readSiCard10TimeBlock = (blockData, punchData, blockIndex, punchCount) => {\n                let isLastBlock = false;\n                const punchesPerBlock = 32;\n                for (let i = 0; i < punchesPerBlock; i++) {\n                    if (blockIndex * punchesPerBlock + i >= punchCount) {\n                        isLastBlock = true;\n                        break;\n                    }\n                    var time = arr2time(blockData.slice(i * 4 + 2, i * 4 + 4));\n                    if (0 <= time) {\n                        punchData[blockIndex * punchesPerBlock + i] = {\n                            code: blockData[i * 4 + 1],\n                            time: time,\n                        };\n                    } else {\n                        console.warn('SICard10 Error: Undefined Time in punched range');\n                    }\n                }\n                return isLastBlock;\n            };\n            let len = undefined;\n            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x00], 1)\n                .then((data0) => {\n                    console.assert(data0[0][2] === 0, 'Inconsistent');\n                    const page0 = data0[0].slice(3);\n                    var cn = arr2big([page0[25], page0[26], page0[27]]);\n                    if (card.cardNumber !== cn) {\n                        console.warn('SICard10 Error: SI Card Number inconsistency');\n                    }\n\n                    card.startTime = arr2time(page0.slice(14, 16));\n                    card.finishTime = arr2time(page0.slice(18, 20));\n                    card.checkTime = arr2time(page0.slice(10, 12));\n                    len = Math.min(Math.max(page0[22], 0), 128);\n                    card.punches = new Array(len);\n\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x04], 1);\n                })\n                .then((data4) => {\n                    console.assert(data4[0][2] === 4, 'Inconsistent');\n                    const page4 = data4[0].slice(3);\n                    const is4LastBlock = readSiCard10TimeBlock(page4, card.punches, 0, len);\n                    if (is4LastBlock) {\n                        return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                    }\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x05], 1).then((data5) => {\n                        console.assert(data5[0][2] === 5, 'Inconsistent');\n                        const page5 = data5[0].slice(3);\n                        const is5LastBlock = readSiCard10TimeBlock(page5, card.punches, 1, len);\n                        if (is5LastBlock) {\n                            return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                        }\n                        return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x06], 1).then((data6) => {\n                            console.assert(data6[0][2] === 6, 'Inconsistent');\n                            const page6 = data6[0].slice(3);\n                            const is6LastBlock = readSiCard10TimeBlock(page6, card.punches, 2, len);\n                            if (is6LastBlock) {\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            }\n                            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x07], 1).then((data7) => {\n                                console.assert(data7[0][2] === 7, 'Inconsistent');\n                                const page7 = data7[0].slice(3);\n                                readSiCard10TimeBlock(page7, card.punches, 3, len);\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            });\n                        });\n                    });\n                });\n        },\n    },\n    SICard11: {\n        vals: [9000000, 10000000],\n        description: 'SI Card 11',\n        read: (card) => {\n            const readSiCard11TimeBlock = (blockData, punchData, blockIndex, punchCount) => {\n                let isLastBlock = false;\n                const punchesPerBlock = 32;\n                for (let i = 0; i < punchesPerBlock; i++) {\n                    if (blockIndex * punchesPerBlock + i >= punchCount) {\n                        isLastBlock = true;\n                        break;\n                    }\n                    var time = arr2time(blockData.slice(i * 4 + 2, i * 4 + 4));\n                    if (0 <= time) {\n                        punchData[blockIndex * punchesPerBlock + i] = {\n                            code: blockData[i * 4 + 1],\n                            time: time,\n                        };\n                    } else {\n                        console.warn('SICard11 Error: Undefined Time in punched range');\n                    }\n                }\n                return isLastBlock;\n            };\n            let len = undefined;\n            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x00], 1)\n                .then((data0) => {\n                    console.assert(data0[0][2] === 0, 'Inconsistent');\n                    const page0 = data0[0].slice(3);\n                    var cn = arr2big([page0[25], page0[26], page0[27]]);\n                    if (card.cardNumber !== cn) {\n                        console.warn('SICard11 Error: SI Card Number inconsistency');\n                    }\n\n                    card.startTime = arr2time(page0.slice(14, 16));\n                    card.finishTime = arr2time(page0.slice(18, 20));\n                    card.checkTime = arr2time(page0.slice(10, 12));\n                    len = Math.min(Math.max(page0[22], 0), 128);\n                    card.punches = new Array(len);\n\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x04], 1);\n                })\n                .then((data4) => {\n                    console.assert(data4[0][2] === 4, 'Inconsistent');\n                    const page4 = data4[0].slice(3);\n                    const is4LastBlock = readSiCard11TimeBlock(page4, card.punches, 0, len);\n                    if (is4LastBlock) {\n                        return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                    }\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x05], 1).then((data5) => {\n                        console.assert(data5[0][2] === 5, 'Inconsistent');\n                        const page5 = data5[0].slice(3);\n                        const is5LastBlock = readSiCard11TimeBlock(page5, card.punches, 1, len);\n                        if (is5LastBlock) {\n                            return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                        }\n                        return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x06], 1).then((data6) => {\n                            console.assert(data6[0][2] === 6, 'Inconsistent');\n                            const page6 = data6[0].slice(3);\n                            const is6LastBlock = readSiCard11TimeBlock(page6, card.punches, 2, len);\n                            if (is6LastBlock) {\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            }\n                            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x07], 1).then((data7) => {\n                                console.assert(data7[0][2] === 7, 'Inconsistent');\n                                const page7 = data7[0].slice(3);\n                                readSiCard11TimeBlock(page7, card.punches, 3, len);\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            });\n                        });\n                    });\n                });\n        },\n    },\n    SIAC: {\n        vals: [8000000, 9000000],\n        description: 'SIAC',\n        read: (card) => {\n            const readSIACTimeBlock = (blockData, punchData, blockIndex, punchCount) => {\n                let isLastBlock = false;\n                const punchesPerBlock = 32;\n                for (let i = 0; i < punchesPerBlock; i++) {\n                    if (blockIndex * punchesPerBlock + i >= punchCount) {\n                        isLastBlock = true;\n                        break;\n                    }\n                    var time = arr2time(blockData.slice(i * 4 + 2, i * 4 + 4));\n                    if (0 <= time) {\n                        punchData[blockIndex * punchesPerBlock + i] = {\n                            code: blockData[i * 4 + 1],\n                            time: time,\n                        };\n                    } else {\n                        console.warn('SIAC Error: Undefined Time in punched range');\n                    }\n                }\n                return isLastBlock;\n            };\n            let len = undefined;\n            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x00], 1)\n                .then((data0) => {\n                    console.assert(data0[0][2] === 0, 'Inconsistent');\n                    const page0 = data0[0].slice(3);\n                    var cn = arr2big([page0[25], page0[26], page0[27]]);\n                    if (card.cardNumber !== cn) {\n                        console.warn('SIAC Error: SI Card Number inconsistency');\n                    }\n\n                    card.startTime = arr2time(page0.slice(14, 16));\n                    card.finishTime = arr2time(page0.slice(18, 20));\n                    card.checkTime = arr2time(page0.slice(10, 12));\n                    len = Math.min(Math.max(page0[22], 0), 128);\n                    card.punches = new Array(len);\n\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x04], 1);\n                })\n                .then((data4) => {\n                    console.assert(data4[0][2] === 4, 'Inconsistent');\n                    const page4 = data4[0].slice(3);\n                    const is4LastBlock = readSIACTimeBlock(page4, card.punches, 0, len);\n                    if (is4LastBlock) {\n                        return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                    }\n                    return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x05], 1).then((data5) => {\n                        console.assert(data5[0][2] === 5, 'Inconsistent');\n                        const page5 = data5[0].slice(3);\n                        const is5LastBlock = readSIACTimeBlock(page5, card.punches, 1, len);\n                        if (is5LastBlock) {\n                            return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                        }\n                        return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x06], 1).then((data6) => {\n                            console.assert(data6[0][2] === 6, 'Inconsistent');\n                            const page6 = data6[0].slice(3);\n                            const is6LastBlock = readSIACTimeBlock(page6, card.punches, 2, len);\n                            if (is6LastBlock) {\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            }\n                            return card.mainStation._sendCommand(proto.cmd.GET_SI8, [0x07], 1).then((data7) => {\n                                console.assert(data7[0][2] === 7, 'Inconsistent');\n                                const page7 = data7[0].slice(3);\n                                readSIACTimeBlock(page7, card.punches, 3, len);\n                                return card.mainStation._sendCommand(proto.ACK, [], 0).then(() => card);\n                            });\n                        });\n                    });\n                });\n        },\n    },\n    PCard: {vals: [4000000, 5000000], description: 'pCard', read: (_card) => undefined},\n    TCard: {vals: [6000000, 7000000], description: 'tCard', read: (_card) => undefined},\n    FCard: {vals: [14000000, 15000000], description: 'fCard', read: (_card) => undefined},\n};\n\nSiCard.typeByCardNumber = (cn) => {\n    if (!SiCard._typeLookup) {\n        SiCard._typeLookup = {borderList: [], borderLookup: {}};\n        Object.keys(SiCard.Type).map((k) => {\n            var vals = SiCard.Type[k].vals;\n            if ((vals.length % 2) !== 0) {\n                throw new Error(`SiCard.Type.${k}: vals length is ${vals.length}?!? (must be even)`);\n            }\n            var lastEvenVal = 0;\n            for (var i = 0; i < vals.length; i++) {\n                var borderList = SiCard._typeLookup.borderList;\n                let j;\n                for (j = 0; j < borderList.length && borderList[j] < vals[i]; j++) {\n                    // TODO: binary search here\n                }\n                var borderExisted = (SiCard._typeLookup.borderList[j] === vals[i]);\n                if (!borderExisted) { SiCard._typeLookup.borderList.splice(j, 0, vals[i]); }\n                if ((i % 2) === 0) {\n                    let collidingRange;\n                    if (borderExisted) {\n                        collidingRange = SiCard._typeLookup.borderLookup[vals[i]];\n                        if (collidingRange) {\n                            throw new Error(`SiCard.Type.${k}: ${vals[i]} would collide with ${collidingRange}`);\n                        }\n                    }\n                    if (!borderExisted && 0 < j) {\n                        collidingRange = SiCard._typeLookup.borderLookup[SiCard._typeLookup.borderList[j - 1]];\n                        if (collidingRange) {\n                            throw new Error(`SiCard.Type.${k}: ${vals[i]} would collide with ${collidingRange}`);\n                        }\n                    }\n                    SiCard._typeLookup.borderLookup[vals[i]] = k;\n                    lastEvenVal = vals[i];\n                } else {\n                    if (lastEvenVal !== SiCard._typeLookup.borderList[j - 1]) {\n                        throw new Error(`SiCard.Type.${k}: ${vals[i]} is not an immediate follow-up of ${lastEvenVal}`);\n                    }\n                    if (!SiCard._typeLookup.borderLookup[vals[i]]) { SiCard._typeLookup.borderLookup[vals[i]] = false; }\n                }\n            }\n        });\n    }\n    let j;\n    for (j = 0; j < SiCard._typeLookup.borderList.length && SiCard._typeLookup.borderList[j] <= cn; j++) {\n        // TODO: binary search here\n    }\n    if (j === 0) { return false; }\n    return SiCard._typeLookup.borderLookup[SiCard._typeLookup.borderList[j - 1]];\n};\n","import {arr2big, arr2cardNumber, prettyHex, processSiProto, buildSiProtoCommand} from './utils';\nimport {proto} from './constants';\nimport {SiCard} from './SiCard';\nimport {SiStation} from './SiStation';\n\nclass SendTask {\n    constructor(\n        command,\n        parameters,\n        numResponses,\n        resolve,\n        reject,\n        timeout,\n    ) {\n        this.command = command;\n        this.parameters = parameters;\n        this.numResponses = numResponses;\n        this.resolve = resolve;\n        this.reject = reject;\n        this.timeout = timeout;\n        this.state = SendTask.State.QUEUED;\n        this.timeoutTimer = setTimeout(() => {\n            if (this.state !== SendTask.State.SENT) {\n                return;\n            }\n            console.debug(`Timeout: cmd ${prettyHex([this.command])} (expected ${this.numResponses} responses)`, this.responses);\n            this.fail();\n        }, timeout * 1000);\n        this.responses = [];\n    }\n\n    addResponse(response) {\n        this.responses.push(response);\n        if (this.responses.length === this.numResponses) {\n            this.succeed();\n        }\n    }\n\n    succeed() {\n        this.state = SendTask.State.SUCCEEDED;\n        clearTimeout(this.timeoutTimer);\n        this.resolve(this);\n    }\n\n    fail() {\n        this.state = SendTask.State.FAILED;\n        clearTimeout(this.timeoutTimer);\n        this.reject(this);\n    }\n}\n\nSendTask.State = {\n    QUEUED: 0,\n    SENT: 1,\n    SUCCEEDED: 2,\n    FAILED: 3,\n};\n\nexport class SiMainStation extends SiStation {\n    constructor(device, state = SiMainStation.State.Closed) {\n        super(null);\n        this.mainStation = this;\n        this.device = device;\n        this.card = false;\n        this.onMessage = false;\n        this.onRemoved = false;\n        this.onStateChanged = false;\n        this.onCardInserted = false;\n        this.onCard = false;\n        this.onCardRemoved = false;\n        this._sendQueue = [];\n        this._respBuffer = [];\n        this._deviceOpenTimer = false;\n        this._deviceOpenNumErrors = 0;\n        this.state = state;\n        if (!SiMainStation.allByDevice[device.ident]) {\n            SiMainStation.allByDevice[device.ident] = this;\n            try {\n                SiMainStation.onAdded(this);\n            } catch (err) {\n                // ignore\n            }\n        }\n        if (this.state === SiMainStation.State.Closed) {\n            this._deviceOpen();\n        }\n    }\n\n    resetCardCallbacks() {\n        this.onCardInserted = false;\n        this.onCard = false;\n        this.onCardRemoved = false;\n    }\n\n    _dispatch(f, args) {\n        if (f) {\n            setTimeout(() => f(...args), 1);\n        }\n    }\n\n    _changeState(newState) {\n        this.state = newState;\n        if (this.onStateChanged) {\n            this.onStateChanged(this.state);\n        }\n    }\n\n    _deviceOpen() {\n        this._changeState(SiMainStation.State.Opening);\n        this.device.driver.open(this)\n            .then(() => {\n                this._changeState(SiMainStation.State.Starting);\n                this._deviceOpenNumErrors = 0;\n                this._sendCommand(proto.cmd.GET_MS, [0x00], 1, 5)\n                    .then(() => {\n                        this._changeState(SiMainStation.State.Ready);\n                    })\n                    .catch((err) => {\n                        this._changeState(SiMainStation.State.Closed);\n                        console.error('Could not communicate after having opened SiMainStation: ', err);\n                        this._retryDeviceOpen();\n                    });\n            })\n            .catch((err) => {\n                console.error('Could not open SiMainStation: ', err);\n                this._retryDeviceOpen();\n            });\n    }\n\n    _retryDeviceOpen() {\n        var scheduleReopen = () => {\n            if (!this._deviceOpenTimer) {\n                var timeout = 100;\n                for (var i = 0; i < this._deviceOpenNumErrors && i < 10; i++) { timeout = timeout * 2; }\n                this._deviceOpenTimer = setTimeout(() => {\n                    this._deviceOpenTimer = false;\n                    this._deviceOpen();\n                }, timeout);\n                this._deviceOpenNumErrors++;\n            }\n        };\n        this.device.driver.close(this)\n            .then(() => {\n                scheduleReopen();\n            })\n            .catch((err) => {\n                console.error('Could not close device: ', err);\n                scheduleReopen();\n            });\n    }\n\n    _logReceive(bufView) {\n        console.debug(`<= ${prettyHex(bufView)}     (${this.device.driver.name}; ${this._respBuffer.length})`);\n    }\n\n    _processReceiveBuffer() {\n        const continueProcessing = (timeout = 1) => setTimeout(() => this._processReceiveBuffer(), timeout);\n        const message = processSiProto(this._respBuffer);\n        if (message === null) {\n            return null;\n        }\n        if (this.onMessage) {\n            this.onMessage(message);\n        }\n        const {mode, command, parameters} = message;\n        if (mode === proto.NAK) {\n            if (0 < this._sendQueue.length && this._sendQueue[0].state === SendTask.State.SENT) {\n                this._sendQueue[0].fail();\n            }\n            return continueProcessing();\n        }\n        let cn, typeFromCN;\n        if (command === proto.cmd.SI5_DET) {\n            cn = arr2cardNumber([parameters[5], parameters[4], parameters[3]]);\n            this.card = new SiCard(this, cn);\n            console.log('SI5 DET', this.card, parameters);\n            this._dispatch(this.onCardInserted, [this.card]);\n            this.card.read()\n                .then((card) => {\n                    this._dispatch(this.onCard, [card]);\n                });\n            return continueProcessing();\n        }\n        if (command === proto.cmd.SI6_DET) {\n            cn = arr2cardNumber([parameters[5], parameters[4], parameters[3]]);\n            typeFromCN = SiCard.typeByCardNumber(cn);\n            if (typeFromCN !== 'SICard6') {\n                console.warn(`SICard6 Error: SI Card Number inconsistency: Function SI6 called, but number is ${cn} (=> ${typeFromCN})`);\n            }\n            this.card = new SiCard(this, cn);\n            console.log('SI6 DET', parameters);\n            this._dispatch(this.onCardInserted, [this.card]);\n            this.card.read()\n                .then((card) => {\n                    this._dispatch(this.onCard, [card]);\n                });\n            return continueProcessing();\n        }\n        if (command === proto.cmd.SI8_DET) {\n            cn = arr2cardNumber([parameters[5], parameters[4], parameters[3]]);\n            typeFromCN = SiCard.typeByCardNumber(cn);\n            if (!{'SICard8': 1, 'SICard9': 1, 'SICard10': 1, 'SICard11': 1}[typeFromCN]) {\n                console.warn(`SICard8 Error: SI Card Number inconsistency: Function SI8 called, but number is ${cn} (=> ${typeFromCN})`);\n            }\n            this.card = new SiCard(this, cn);\n            console.log('SI8 DET', parameters);\n            this._dispatch(this.onCardInserted, [this.card]);\n            this.card.read()\n                .then((card) => {\n                    this._dispatch(this.onCard, [card]);\n                });\n            return continueProcessing();\n        }\n        if (command === proto.cmd.SI_REM) {\n            cn = arr2cardNumber([parameters[5], parameters[4], parameters[3]]);\n            console.log('SI REM', parameters, cn, this.card);\n            if (this.card !== false && this.card.cardNumber === cn) {\n                this._dispatch(this.onCardRemoved, [this.card]);\n            } else {\n                console.warn(`Card ${cn} was removed, but never inserted`);\n            }\n            this.card = false;\n            if (\n                this._sendQueue.length > 0 &&\n                this._sendQueue[0].state === SendTask.State.SENT &&\n                0xB0 <= this._sendQueue[0].command &&\n                this._sendQueue[0].command <= 0xEF\n            ) { // Was expecting response from card => \"early Timeout\"\n                console.debug(`Early Timeout: cmd ${prettyHex([this._sendQueue[0].command])} (expected ${this._sendQueue[0].numResponses} responses)`, this._sendQueue[0].responses);\n                this._sendQueue[0].fail();\n            }\n            return continueProcessing();\n        }\n        if (command === proto.cmd.TRANS_REC) {\n            cn = arr2big([parameters[3], parameters[4], parameters[5]]);\n            if (cn < 500000) {\n                if (parameters[3] < 2) {\n                    cn = arr2big([parameters[4], parameters[5]]);\n                } else {\n                    cn = parameters[3] * 100000 + arr2big([parameters[4], parameters[5]]);\n                }\n            }\n            const transRecordCard = new SiCard(this, cn);\n            console.log('TRANS_REC', transRecordCard, parameters);\n            this._dispatch(this.onCardInserted, [transRecordCard]);\n            this._dispatch(this.onCardRemoved, [transRecordCard]);\n            return continueProcessing();\n        }\n        if (this._sendQueue.length === 0 || this._sendQueue[0].state !== SendTask.State.SENT) {\n            console.warn(`Strange Response: ${prettyHex([command])} (not expecting anything)...`);\n            return continueProcessing();\n        }\n        if (this._sendQueue[0].command !== command) {\n            console.warn(`Strange Response: expected ${prettyHex([this._sendQueue[0].command])}, but got ${prettyHex([command])}...`);\n            return continueProcessing();\n        }\n        this._sendQueue[0].addResponse(parameters);\n        return continueProcessing();\n    }\n\n    _processSendQueue() {\n        if (this.state !== SiMainStation.State.Starting && this.state !== SiMainStation.State.Ready) {\n            return setTimeout(() => this._processSendQueue(), 100);\n        }\n        if (this._sendQueue.length === 0 || this._sendQueue[0].state === SendTask.State.SENT) {\n            return null;\n        }\n        var sendTask = this._sendQueue[0];\n\n        // Build command\n        var cmd = buildSiProtoCommand(sendTask);\n\n        // Send command\n        var bstr = String.fromCharCode(proto.WAKEUP) + cmd;\n        var bytes = new Uint8Array(bstr.length);\n        for (let i = 0; i < bstr.length; i++) {\n            bytes[i] = bstr.charCodeAt(i);\n        }\n        this.device.driver.send(this, bytes.buffer)\n            .then(() => {\n                console.debug(`=> ${prettyHex(bstr)}     (${this.device.driver.name})`);\n                if (sendTask.numResponses <= 0) {\n                    sendTask.succeed();\n                }\n            })\n            .catch((err) => {\n                console.warn(err);\n                sendTask.fail();\n            });\n        sendTask.state = SendTask.State.SENT;\n        return null;\n    }\n\n    sendMessage(message) {\n        const {command, parameters} = message;\n        this._sendCommand(command, parameters, 0);\n    }\n\n    _sendCommand(command, parameters, numRespArg, timeoutArg) {\n        return new Promise((resolve, reject) => {\n            const numResponses = numRespArg ? numRespArg : 0;\n            const timeout = timeoutArg ? timeoutArg : 10;\n\n            const sendTask = new SendTask(\n                command,\n                parameters,\n                numResponses,\n                (resolvedTask) => {\n                    const shifted = this._sendQueue.shift();\n                    if (resolvedTask !== shifted) {\n                        throw new Error('Resolved unexecuting SendTask');\n                    }\n                    setTimeout(() => this._processSendQueue(), 1);\n                    resolve(resolvedTask.responses);\n                },\n                (rejectedTask) => {\n                    const shifted = this._sendQueue.shift();\n                    if (rejectedTask !== shifted) {\n                        throw new Error('Rejected unexecuting SendTask');\n                    }\n                    setTimeout(() => this._processSendQueue(), 1);\n                    reject(new Error('Rejection'));\n                },\n                timeout,\n            );\n            this._sendQueue.push(sendTask);\n            this._processSendQueue();\n        });\n    }\n\n    _remove() {\n        if (0 < this._sendQueue.length && this._sendQueue[0].state !== -1) {\n            clearTimeout(this._sendQueue[0].timeoutTimer);\n        }\n        clearTimeout(this._deviceOpenTimer);\n        delete SiMainStation.allByDevice[this.device.ident];\n        try {\n            SiMainStation.onRemoved(this);\n        } catch (err) {\n            // ignore\n        }\n        try {\n            this.onRemoved();\n        } catch (err) {\n            // ignore\n        }\n    }\n}\n\nSiMainStation.State = { // TODO: maybe include instructions in description?\n    Closed: 0,\n    Opening: 1,\n    Starting: 2,\n    Ready: 3,\n};\n\nSiMainStation.drivers = {};\nSiMainStation.allByDevice = {};\nSiMainStation.all = () => {\n    var arr = [];\n    Object.keys(SiMainStation.allByDevice).map((deviceIdent) => {\n        arr.push(SiMainStation.allByDevice[deviceIdent]);\n    });\n    return arr;\n};\nSiMainStation.startDeviceDetection = () => {\n    var runDeviceDetection = () => {\n        Object.keys(SiMainStation.drivers).map((k) => {\n            try {\n                var driver = new SiMainStation.drivers[k]();\n                if (driver && driver.name && driver.detect && driver.send && driver.open && driver.close) {\n                    driver.detect(SiMainStation);\n                } else {\n                    console.warn('Not a driver:', k);\n                }\n            } catch (err) {\n                console.warn('Error in device detection:', err);\n            }\n        });\n        if (SiMainStation.detectionTimeout) { clearTimeout(SiMainStation.detectionTimeout); }\n        SiMainStation.detectionTimeout = setTimeout(runDeviceDetection, 1000);\n    };\n    runDeviceDetection();\n};\nSiMainStation.newDevice = () => {\n    Object.keys(SiMainStation.drivers).map((k) => {\n        try {\n            var driver = new SiMainStation.drivers[k]();\n            if (driver && driver.name && driver.detect && driver.send && driver.open && driver.close) {\n                driver.new(SiMainStation);\n            } else {\n                console.warn('Not a driver:', k);\n            }\n        } catch (err) {\n            console.warn('Error in device detection:', err);\n        }\n    });\n};\nSiMainStation.onAdded = (_ms) => undefined;\nSiMainStation.onRemoved = (_ms) => undefined;\n","import {arr2big, arr2date, timeoutResolvePromise} from './utils';\nimport {proto} from './constants';\n\nexport class SiStation {\n    constructor(mainStation) {\n        this.mainStation = mainStation;\n        this._info = {};\n        this._infoTime = 0;\n        this._infoSubscribers = [];\n    }\n\n    static modeLookup() {\n        if (SiStation._modeLookup) { return SiStation._modeLookup; }\n        SiStation._modeLookup = {};\n        Object.keys(SiStation.Mode).map((k) => {\n            SiStation._modeLookup[SiStation.Mode[k].val] = k;\n        });\n        return SiStation._modeLookup;\n    }\n\n    static typeLookup() {\n        if (SiStation._typeLookup) { return SiStation._typeLookup; }\n        SiStation._typeLookup = {};\n        Object.keys(SiStation.Type).map((k) => {\n            SiStation._typeLookup[SiStation.Type[k].val] = k;\n        });\n        return SiStation._typeLookup;\n    }\n\n    static modelLookup() {\n        if (SiStation._modelLookup) { return SiStation._modelLookup; }\n        SiStation._modelLookup = {};\n        Object.keys(SiStation.Model).map((k) => {\n            SiStation.Model[k].vals.map((val) => {\n                SiStation._modelLookup[val] = k;\n            });\n        });\n        return SiStation._modelLookup;\n    }\n\n    readInfo(force) {\n        var now = new Date().getTime();\n        if (!force && now < this._infoTime + 60000) {\n            return timeoutResolvePromise(this._info);\n        }\n        if (!force && 0 < this._infoSubscribers.length) {\n            return new Promise((resolve, reject) => {\n                this._infoSubscribers.push({resolve: resolve, reject: reject});\n            });\n        }\n        return this.mainStation._sendCommand(proto.cmd.GET_SYS_VAL, [0x00, 0x80], 1)\n            .then((d) => {\n                const data = d[0];\n                data.splice(0, 3);\n                this._infoTime = new Date().getTime();\n                this._info = {};\n                this._info._raw = data;\n                this._info.serialNumber = arr2big(data.slice(0x00, 0x04));\n                this._info.firmwareVersion = arr2big(data.slice(0x05, 0x08));\n                this._info.buildDate = arr2date(data.slice(0x08, 0x0B));\n                this._info.deviceModel = SiStation.modelLookup()[arr2big(data.slice(0x0B, 0x0D))];\n                this._info.memorySize = arr2big(data.slice(0x0D, 0x0E));\n                this._info.refreshRate = data[0x10]; // in 3/sec\n                this._info.powerMode = data[0x11]; // 06 low power, 08 standard/sprint\n                this._info.batteryDate = arr2date(data.slice(0x15, 0x18));\n                this._info.batteryCapacity = arr2big(data.slice(0x19, 0x1B));\n                this._info.backupPointer = arr2big(data.slice(0x1C, 0x1E).concat(data.slice(0x21, 0x23)));\n                this._info.siCard6Mode = arr2big(data.slice(0x33, 0x34));\n                this._info.memoryOverflow = arr2big(data.slice(0x3D, 0x3E));\n                this._info.interval = arr2big(data.slice(0x48, 0x4A));\n                this._info.wtf = arr2big(data.slice(0x4A, 0x4C));\n                this._info.program = data[0x70];\n                this._info.mode = SiStation.modeLookup()[data[0x71]];\n                this._info.code = data[0x72] + ((data[0x73] & 0xC0) << 2);\n                this._info.beeps = ((data[0x73] >> 2) & 0x01);\n                this._info.flashes = (data[0x73] & 0x01);\n                this._info.extendedProtocol = (data[0x74] & 0x01);\n                this._info.autoSend = ((data[0x74] >> 1) & 0x01);\n                this._info.handshake = ((data[0x74] >> 2) & 0x01);\n                this._info.sprint4ms = ((data[0x74] >> 3) & 0x01);\n                this._info.passwordOnly = ((data[0x74] >> 4) & 0x01);\n                this._info.stopOnFullBackup = ((data[0x74] >> 5) & 0x01);\n                this._info.autoReadout = ((data[0x74] >> 7) & 0x01);\n                this._info.lastWriteDate = arr2date(data.slice(0x75, 0x7B));\n                // this._info.autoOffTimeout = arr2date([0, 1, 1].concat(data.slice(0x7B, 0x7E)));\n                this._info.autoOffTimeout = arr2big(data.slice(0x7E, 0x80));\n                this._infoSubscribers.map((infoSubscriber) => setTimeout(() => infoSubscriber.resolve(this._info), 1));\n                this._infoSubscribers = [];\n                console.log('INFO READ', this._info);\n                return this._info;\n            })\n            .catch((_err) => {\n                this._infoSubscribers.map((infoSubscriber) => setTimeout(() => infoSubscriber.reject(), 1));\n                this._infoSubscribers = [];\n                throw new Error('READ INFO');\n            });\n    }\n\n    time(newTime) {\n        if (newTime === undefined) {\n            return this.mainStation._sendCommand(proto.cmd.GET_TIME, [], 1)\n                .then((d) => arr2date(d[0].slice(2)));\n        }\n        // TODO: compensate for waiting time\n        var secs = (newTime.getHours() % 12) * 3600 + newTime.getMinutes() * 60 + newTime.getSeconds();\n        var params = [\n            newTime.getFullYear() % 100,\n            newTime.getMonth() + 1,\n            newTime.getDate(),\n            (newTime.getDay() << 1) + Math.floor(newTime.getHours() / 12),\n            secs >> 8,\n            secs & 0xFF,\n            Math.floor(newTime.getMilliseconds() * 256 / 1000),\n        ];\n        return this.mainStation._sendCommand(proto.cmd.SET_TIME, params, 1)\n            .then((d) => arr2date(d[0].slice(2)));\n\n    }\n\n    signal(countArg) {\n        const count = !countArg || countArg < 1 ? 1 : countArg;\n        return this.mainStation._sendCommand(proto.cmd.SIGNAL, [count], 1)\n            .then((data) => {\n                if (data[0][2] !== count) {\n                    throw new Error('NUM BEEPS');\n                }\n            });\n    }\n\n    powerOff() { // Does not power off BSM8 (USB powered), though\n        return this.mainStation._sendCommand(proto.cmd.OFF, [], 0);\n    }\n\n    info(property, paramsFunc, newValue) {\n        if (newValue === undefined) {\n            return this.readInfo(false)\n                .then((info) => info[property]);\n        }\n        let params = undefined;\n        return this.readInfo(false)\n            .then((info) => {\n                params = paramsFunc(info);\n                if (!params) {\n                    throw new Error('INVALID_PARAM');\n                }\n                return this.mainStation._sendCommand(proto.cmd.SET_SYS_VAL, params, 1);\n            })\n            .then((d) => {\n                const data = d[0];\n                data.splice(0, 2);\n                if (data[0] !== params[0]) {\n                    throw new Error('SET_CODE_RESP_ERR');\n                }\n                return this.readInfo(true);\n            })\n            .then((info) => info[property]);\n    }\n\n    // TODO: program (0x70)\n\n    code(newCode) {\n        return this.info('code', (info) => [0x72, newCode & 0xFF, ((newCode & 0x0300) >> 2) + (info._raw[0x73] & 0x3F)], newCode);\n    }\n\n    mode(newMode) {\n        return this.info('mode', (_info) => {\n            const modeLookup = SiStation.modeLookup();\n            const newModeVal = newMode.hasOwnProperty('val') ? newMode.val : newMode;\n            if (modeLookup[newModeVal] === undefined) {\n                return false;\n            }\n            return [0x71, newModeVal];\n        }, newMode);\n    }\n\n    beeps(newBeeps) {\n        return this.info('beeps', (info) => [0x73, (newBeeps ? 0x04 : 0x00) + (info._raw[0x73] & 0xFB)], newBeeps);\n    }\n\n    flashes(newFlashes) {\n        return this.info('flashes', (info) => [0x73, (newFlashes ? 0x01 : 0x00) + (info._raw[0x73] & 0xFE)], newFlashes);\n    }\n\n    autoSend(newAutoSend) {\n        return this.info('autoSend', (info) => [0x74, (newAutoSend ? 0x02 : 0x00) + (info._raw[0x74] & 0xFD)], newAutoSend);\n    }\n\n    extendedProtocol(newExtendedProtocol) {\n        return this.info('extendedProtocol', (info) => [0x74, (newExtendedProtocol ? 0x01 : 0x00) + (info._raw[0x74] & 0xFE)], newExtendedProtocol);\n    }\n\n    serialNumber() {\n        return this.info('serialNumber', () => false, undefined);\n    }\n\n    firmwareVersion() {\n        return this.info('firmwareVersion', () => false, undefined);\n    }\n\n    buildDate() {\n        return this.info('buildDate', () => false, undefined);\n    }\n\n    deviceModel() {\n        return this.info('deviceModel', () => false, undefined);\n    }\n\n    memorySize() {\n        return this.info('memorySize', () => false, undefined);\n    }\n\n    batteryDate() {\n        return this.info('batteryDate', () => false, undefined);\n    }\n\n    batteryCapacity() {\n        return this.info('batteryCapacity', () => false, undefined);\n    }\n\n    backupPointer() {\n        return this.info('backupPointer', () => false, undefined);\n    }\n\n    siCard6Mode() {\n        return this.info('siCard6Mode', () => false, undefined);\n    }\n\n    memoryOverflow() {\n        return this.info('memoryOverflow', () => false, undefined);\n    }\n\n    lastWriteDate() {\n        return this.info('lastWriteDate', () => false, undefined);\n    }\n\n    autoOffTimeout() {\n        return this.info('autoOffTimeout', () => false, undefined);\n    }\n}\nSiStation.Mode = {\n    SIACSpecialFunction1: {val: 0x01},\n    Control: {val: 0x02},\n    Start: {val: 0x03},\n    Finish: {val: 0x04},\n    Readout: {val: 0x05},\n    Clear: {val: 0x07},\n    Check: {val: 0x0A},\n    Print: {val: 0x0B},\n    StartWithTimeTrigger: {val: 0x0C},\n    FinishWithTimeTrigger: {val: 0x0D},\n    BCControl: {val: 0x12},\n    BCStart: {val: 0x13},\n    BCFinish: {val: 0x14},\n    BCSlave: {val: 0x1F},\n};\n\nSiStation.Type = { // TODO: meaningful val-s\n    Main: {val: 0x00},\n    Sprint: {val: 0x01},\n    Print: {val: 0x02},\n    Field: {val: 0x03},\n    Master: {val: 0x04},\n};\n\nSiStation.Model = {\n    BSF3: {vals: [0x8003], description: 'BSF3', type: SiStation.Type.Field, series: 3},\n    BSF4: {vals: [0x8004], description: 'BSF4', type: SiStation.Type.Field, series: 4},\n    BSF5: {vals: [0x8115], description: 'BSF5', type: SiStation.Type.Field, series: 5},\n    BSF6: {vals: [0x8146], description: 'BSF6', type: SiStation.Type.Field, series: 6},\n    BSF7: {vals: [0x8117, 0x8197], description: 'BSF7', type: SiStation.Type.Field, series: 7},\n    BSF8: {vals: [0x8118, 0x8198], description: 'BSF8', type: SiStation.Type.Field, series: 8},\n    BS7Master: {vals: [0x8187], description: 'BS7-Master', type: SiStation.Type.Master, series: 7},\n    BS8Master: {vals: [0x8188], description: 'BS8-Master', type: SiStation.Type.Master, series: 8},\n    BSM4: {vals: [0x8084], description: 'BSM4', type: SiStation.Type.Main, series: 4},\n    BSM6: {vals: [0x8086], description: 'BSM6', type: SiStation.Type.Main, series: 6},\n    BSM7: {vals: [0x9197], description: 'BSM7', type: SiStation.Type.Main, series: 7},\n    BSM8: {vals: [0x9198], description: 'BSM8', type: SiStation.Type.Main, series: 8},\n    BS7S: {vals: [0x9597], description: 'BS7-S', type: SiStation.Type.Sprint, series: 7},\n    BS7P: {vals: [0xB197], description: 'BS7-P', type: SiStation.Type.Print, series: 7},\n    BS7GSM: {vals: [0xB897], description: 'BS7-GSM', type: SiStation.Type.Field, series: 7},\n    BS8P: {vals: [0xB198], description: 'BS8-P', type: SiStation.Type.Print, series: 8},\n};\n","export const proto = {\n    // Protocol characters\n    STX: 0x02,\n    ETX: 0x03,\n    ACK: 0x06, // when sent to BSx3..6, causes beep until SI-card taken out\n    NAK: 0x15,\n    DLE: 0x10,\n    WAKEUP: 0xFF,\n\n    // Basic protocol commands, currently unused\n    basicCmd: {\n        SET_CARDNO: 0x30,\n        GET_SI5: 0x31, // read out SI-card 5 data\n        SI5_WRITE: 0x43, // 02 43 (block: 0x30 to 0x37) (16 bytes) 03\n        SI5_DET: 0x46, // SI-card 5 inserted (46 49) or removed (46 4F)\n        TRANS_REC: 0x53, // autosend timestamp (online control)\n        TRANS_TIME: 0x54, // autosend timestamp (lightbeam trigger)\n        GET_SI6: 0x61, // read out SI-card 6 data\n        SI6_DET: 0x66, // SI-card 6 inserted\n        SET_MS: 0x70, // \\x4D=\"M\"aster, \\x53=\"S\"lave\n        GET_MS: 0x71,\n        SET_SYS_VAL: 0x72,\n        GET_SYS_VAL: 0x73,\n        GET_BDATA: 0x74, // Note: response carries '\\xC4'!\n        ERASE_BDATA: 0x75,\n        SET_TIME: 0x76,\n        GET_TIME: 0x77,\n        OFF: 0x78,\n        GET_BDATA2: 0x7A, // Note: response carries '\\xCA'!\n        SET_BAUD: 0x7E, // 0=4800 baud, 1=38400 baud\n    },\n    basicCmdLookup: () => {\n        if (proto._basicCmdLookup) {\n            return proto._basicCmdLookup;\n        }\n        proto._basicCmdLookup = {};\n        Object.keys(proto.basicCmd).map((k) => {\n            proto._basicCmdLookup[proto.basicCmd[k]] = k;\n        });\n        return proto._basicCmdLookup;\n    },\n\n    // Extended protocol commands\n    cmd: {\n        GET_BACKUP: 0x81,\n        SET_SYS_VAL: 0x82,\n        GET_SYS_VAL: 0x83,\n        SRR_WRITE: 0xA2, // ShortRangeRadio - SysData write\n        SRR_READ: 0xA3, // ShortRangeRadio - SysData read\n        SRR_QUERY: 0xA6, // ShortRangeRadio - network device query\n        SRR_PING: 0xA7, // ShortRangeRadio - heartbeat from linked devices, every 50 seconds\n        SRR_ADHOC: 0xA8, // ShortRangeRadio - ad-hoc message, f.ex. from SI-ActiveCard\n        GET_SI5: 0xB1, // read out SI-card 5 data\n        TRANS_REC: 0xD3, // autosend timestamp (online control)\n        CLEAR_CARD: 0xE0, // found on SI-dev-forum: 02 E0 00 E0 00 03 (http://www.sportident.com/en/forum/8/56#59)\n        GET_SI6: 0xE1, // read out SI-card 6 data block\n        SET_SI6: 0xE2, // write SI-card 6 line (16 bytes)\n        SET_SI6_SPECIAL: 0xE4, // write SI-card 6 special fields (e.g. start number)\n        SI5_DET: 0xE5, // SI-card 5 inserted\n        SI6_DET: 0xE6, // SI-card 6 inserted\n        SI_REM: 0xE7, // SI-card removed\n        SI8_DET: 0xE8, // SI-card 8/9/10/11/p/t inserted\n        SET_SI8: 0xEA, // write SI-card 8/9/10/11/p/t data word\n        GET_SI8: 0xEF, // read out SI-card 8/9/10/11/p/t data block\n        SET_MS: 0xF0, // \\x4D=\"M\"aster, \\x53=\"S\"lave\n        GET_MS: 0xF1,\n        ERASE_BDATA: 0xF5,\n        SET_TIME: 0xF6,\n        GET_TIME: 0xF7,\n        OFF: 0xF8,\n        SIGNAL: 0xF9, // 02 F9 (number of signals) (CRC16) 03\n        SET_BAUD: 0xFE, // \\x00=4800 baud, \\x01=38400 baud\n    },\n    cmdLookup: () => {\n        if (proto._cmdLookup) {\n            return proto._cmdLookup;\n        }\n        proto._cmdLookup = {};\n        Object.keys(proto.cmd).map((k) => {\n            proto._cmdLookup[proto.cmd[k]] = k;\n        });\n        return proto._cmdLookup;\n    },\n\n    // Protocol Parameters\n    P_MS_DIRECT: 0x4D, // \"M\"aster\n    P_MS_INDIRECT: 0x53, // \"S\"lave\n    P_SI6_CB: 0x08,\n\n    // offsets in system data\n    // currently only O_MODE, O_STATION_CODE and O_PROTO are used\n    sysDataOffset: {\n        OLD_SERIAL: 0x00, // 2 bytes - only up to BSx6, numbers < 65.536\n        OLD_CPU_ID: 0x02, // 2 bytes - only up to BSx6, numbers < 65.536\n        SERIAL_NO: 0x00, // 4 bytes - only after BSx7, numbers > 70.000 (if byte 0x00 > 0, better use OLD offsets)\n        FIRMWARE: 0x05, // 3 bytes\n        BUILD_DATE: 0x08, // 3 bytes - YYMMDD\n        MODEL_ID: 0x0B, // 2 bytes:\n        //   8003: BSF3 (serial numbers > 1.000)\n        //   8004: BSF4 (serial numbers > 10.000)\n        //   8084: BSM4-RS232\n        //   8086: BSM6-RS232 / BSM6-USB\n        //   8146: BSF6 (serial numbers > 30.000)\n        //   8115: BSF5 (serial numbers > 50.000)\n        //   8117 / 8118: BSF7 / BSF8 (serial no. 70.000...70.521, 72.002...72.009)\n        //   8187 / 8188: BS7-SI-Master / BS8-SI-Master\n        //   8197: BSF7 (serial numbers > 71.000, apart from 72.002...72.009)\n        //   8198: BSF8 (serial numbers > 80.000)\n        //   9197 / 9198: BSM7-RS232, BSM7-USB / BSM8-USB, BSM8-SRR\n        //   9199: unknown\n        //   9597: BS7-S\n        //   B197 / B198: BS7-P / BS8-P\n        //   B897: BS7-GSM\n        MEM_SIZE: 0x0D, // 1 byte - in KB\n        REFRESH_RATE: 0x10, // 1 byte - in 3/sec\n        POWER_MODE: 0x11, // 1 byte - 06 low power, 08 standard/sprint\n\n        BAT_DATE: 0x15, // 3 bytes - YYMMDD\n        BAT_CAP: 0x19, // 2 bytes - battery capacity in mAh (as multiples of 14.0625?!)\n        BACKUP_PTR: 0x1C, // 4 bytes - at positions 1C,1D,21,22\n        SI6_CB: 0x33, // 1 byte - bitfield defining which SI Card 6 blocks to read: \\x00=\\xC1=read block0,6,7; \\x08=\\xFF=read all 8 blocks\n        BAT_STATE: 0x34, // 4 bytes - for battery state: 2000mAh: 000000=0%, 6E0000=100%, 1000mAh:000000=0%, 370000=100%\n        MEM_OVERFLOW: 0x3D, // 1 byte - memory overflow if != 0x00\n\n        INTERVAL: 0x48, // 2 bytes - in 32*ms\n        WTF: 0x4A, // 2 bytes - in 32*ms\n\n        PROGRAM: 0x70, // 1 byte - station program: xx0xxxxxb competition, xx1xxxxxb training\n        MODE: 0x71, // 1 byte - see SI station modes below\n        STATION_CODE: 0x72, // 1 byte\n        PROTO: 0x74, // 1 byte - protocol configuration, bit mask value:\n        //   xxxxxxx1b extended protocol\n        //   xxxxxx1xb auto send out\n        //   xxxxx1xxb handshake (only valid for card readout)\n        //   xxxx1xxxb sprint 4ms (only for Start&Finish modes)\n        //   xxx1xxxxb access with password only\n        //   xx1xxxxxb stop, if backup is full (only for Readout mode)\n        //   1xxxxxxxb read out SI-card after punch (only for punch modes;\n        //             depends on bit 2: auto send out or handshake)\n        LAST_WRITE_DATE: 0x75, // 3 bytes - YYMMDD\n        LAST_WRITE_TIME: 0x78, // 3 bytes - 1 byte day (see below), 2 bytes seconds after midnight/midday\n        SLEEP_TIME: 0x7B, // 3 bytes - 1 byte day (see below), 2 bytes seconds after midnight/midday\n        //   xxxxxxx0b - seconds relative to midnight/midday: 0 = am, 1 = pm\n        //   xxxx000xb - day of week: 000 = Sunday, 110 = Saturday\n        //   xx00xxxxb - week counter 0..3, relative to programming date\n        WORKING_TIME: 0x7E, // 2 bytes - big endian number = minutes\n    },\n\n    // SI station modes\n    M_CONTROL: 0x02,\n    M_START: 0x03,\n    M_FINISH: 0x04,\n    M_READ_SICARDS: 0x05,\n    M_CLEAR: 0x07,\n    M_CHECK: 0x0A,\n    M_PRINTOUT: 0x0B,\n\n    // Weekday encoding (only for reference, currently unused)\n    D_SUNDAY: 0b000,\n    D_MONDAY: 0b001,\n    D_TUESDAY: 0b010,\n    D_WEDNESDAY: 0b011,\n    D_THURSDAY: 0b100,\n    D_FRIDAY: 0b101,\n    D_SATURDAY: 0b110,\n\n    // Backup memory record length\n    REC_LEN: 8, // Only in extended protocol, otherwise 6!\n\n    // punch trigger in control mode data structure\n    T_OFFSET: 8,\n    T_CN: 0,\n    T_TIME: 5,\n\n    // backup memory in control mode\n    BC_CN: 3,\n    BC_TIME: 8,\n};\n","export class BaseDriver {\n    get name() {\n        throw new Error('Driver must implement name getter');\n    }\n\n    new(_MainStation) {\n        throw new Error('Driver must implement \"new\" method');\n    }\n\n    detect(_MainStation) {\n        throw new Error('Driver must implement \"detect\" method');\n    }\n\n    open(_mainStation) {\n        throw new Error('Driver must implement \"open\" method');\n    }\n\n    close(_mainStation) {\n        throw new Error('Driver must implement \"close\" method');\n    }\n\n    send(_mainStation, _buffer) {\n        throw new Error('Driver must implement \"send\" method');\n    }\n}\n","import {BaseDriver} from './BaseDriver';\n\nconst siConfiguration = 1;\nconst siInterface = 0;\nconst siAlternate = 0;\nconst siEndpoint = 1;\nconst siPacketSize = 64;\nconst siDeviceFilters = [\n    {vendorId: 0x10c4, productId: 0x800a},\n];\n\n\nexport class WebUsb extends BaseDriver {\n    get name() {\n        return 'WebUSB';\n    }\n\n    new(MainStation) {\n        if (!('usb' in navigator)) {\n            return;\n        }\n        navigator.usb.requestDevice({\n            filters: siDeviceFilters,\n        })\n            .then((selectedDevice) => {\n                if (!(`USB-${selectedDevice.serialNumber}` in MainStation.allByDevice)) {\n                    new MainStation({\n                        ident: `USB-${selectedDevice.serialNumber}`,\n                        name: selectedDevice.productName,\n                        driver: this,\n                        _device: selectedDevice,\n                    });\n                }\n            });\n    }\n\n    detect(MainStation) {\n        if (!('usb' in navigator)) {\n            return;\n        }\n        navigator.usb.getDevices().then((devices) => {\n            devices.map((device) => {\n                const matchesSiDeviceFilter = siDeviceFilters.findIndex((filter) =>\n                    device.vendorId === filter.vendorId && device.productId === filter.productId) !== -1;\n                if (matchesSiDeviceFilter) {\n                    if (!(`USB-${device.serialNumber}` in MainStation.allByDevice)) {\n                        new MainStation({\n                            ident: `USB-${device.serialNumber}`,\n                            name: device.productName,\n                            driver: this,\n                            _device: device,\n                        });\n                    }\n                }\n            });\n        });\n    }\n\n    open(mainStation) {\n        return new Promise((resolve, _reject) => {\n            const dev = mainStation.device._device;\n\n            mainStation.device._receiveLoop = () => {\n                dev.transferIn(siEndpoint, siPacketSize)\n                    .then((response) => {\n                        mainStation.device._receiveLoop();\n                        var bufView = new Uint8Array(response.data.buffer);\n                        mainStation._logReceive(bufView);\n                        for (var i = 0; i < bufView.length; i++) {\n                            mainStation._respBuffer.push(bufView[i]);\n                        }\n                        mainStation._processReceiveBuffer();\n                    })\n                    .catch((err) => {\n                        console.warn(err);\n                        mainStation._remove();\n                    });\n            };\n\n            console.debug('Opening...', mainStation.device);\n            dev.open()\n                .then(() => {\n                    console.debug('Resetting...', dev);\n                    return dev.reset();\n                })\n                .then(() => {\n                    console.debug('Selecting Configuration...', dev);\n                    return dev.selectConfiguration(siConfiguration);\n                })\n                .then(() => {\n                    console.debug('Claiming Interface...', dev);\n                    return dev.claimInterface(siInterface);\n                })\n                .then(() => {\n                    console.debug('Selection Alternate Interface...', dev);\n                    return dev.selectAlternateInterface(siInterface, siAlternate);\n                })\n                .then(() => {\n                    console.debug('Enabling Serial...');\n                    return dev.controlTransferOut({\n                        requestType: 'vendor',\n                        recipient: 'interface',\n                        request: 0x00,\n                        value: 0x01,\n                        index: siInterface,\n                    });\n                })\n                .then(() => {\n                    console.debug('Setting Baudrate...');\n                    return dev.controlTransferOut({\n                        requestType: 'vendor',\n                        recipient: 'interface',\n                        request: 0x1E,\n                        value: 0x00,\n                        index: siInterface,\n                    }, new Uint8Array([0x00, 0x96, 0x00, 0x00]).buffer);\n                })\n                .then(() => {\n                    console.debug('Starting Receive Loop...');\n                    mainStation.device._receiveLoop();\n                    resolve();\n                });\n        });\n    }\n\n    close(mainStation) {\n        return new Promise((resolve, _reject) => {\n            const dev = mainStation.device._device;\n            console.debug('Disabling Serial...');\n            dev.controlTransferOut({\n                requestType: 'vendor',\n                recipient: 'interface',\n                request: 0x00,\n                value: 0x00,\n                index: siInterface,\n            })\n                .then(() => {\n                    console.debug('Releasing Interface...');\n                    return dev.releaseInterface(siInterface);\n                })\n                .then(() => {\n                    console.debug('Closing Device...');\n                    return dev.close();\n                })\n                .then(() => {\n                    resolve();\n                });\n        });\n    }\n\n    send(mainStation, buffer) {\n        const dev = mainStation.device._device;\n        return dev.transferOut(siEndpoint, buffer);\n    }\n}\n\nexport default WebUsb;\n","export {default as WebUsb} from './WebUsb';\n","/* global si */\n/* exported si */\n\nimport * as constants from './constants';\nimport * as drivers from './drivers';\nimport * as utils from './utils';\nimport {SiCard} from './SiCard';\nimport {SiStation} from './SiStation';\nimport {SiMainStation} from './SiMainStation';\n\nexport const si = {\n    constants: constants,\n    drivers: drivers,\n    utils: utils,\n    Station: SiStation,\n    MainStation: SiMainStation,\n    Card: SiCard,\n    onLoad: () => undefined,\n};\n\nwindow.addEventListener('load', () => {\n    SiMainStation.startDeviceDetection();\n    if (si.onLoad) {\n        si.onLoad();\n    }\n}, true);\n\nexport default si;\n\nwindow.si = si;\n","import {proto} from './constants';\n\nexport const isByte = (byte) => (\n    Number(byte) === byte &&\n    Math.floor(byte) === byte &&\n    byte < 0x100\n);\n\nexport const arr2big = (arr) => {\n    var outnum = 0;\n    for (var i = 0; i < arr.length; i++) {\n        const byte = arr[i];\n        if (!isByte(byte)) {\n            throw new Error('Array elements need to be bytes');\n        }\n        outnum += byte * Math.pow(0x100, arr.length - i - 1);\n    }\n    return outnum;\n};\n\nexport const arr2time = (arr) => {\n    if (arr.length !== 2) {\n        throw new Error(`arr2time: length must be 2, but is ${arr.length}`);\n    }\n    if (arr[0] === 0xEE && arr[1] === 0xEE) {\n        return null;\n    }\n    return arr2big(arr);\n};\n\nexport const arr2date = (arr) => {\n    if (arr.length === 7 || arr.length === 6) {\n        var secs = arr2big(arr.slice(4, 6));\n        return new Date(Date.UTC(\n            arr[0] + 2000,\n            arr[1] - 1,\n            arr[2],\n            (arr[3] & 0x01) * 12 + Math.floor(secs / 3600),\n            Math.floor((secs % 3600) / 60),\n            secs % 60,\n            (arr.length === 7 ? arr[6] * 1000 / 256 : 0),\n        ));\n    } else if (arr.length === 3) {\n        return new Date(Date.UTC(\n            2000 + arr[0],\n            arr[1] - 1,\n            arr[2],\n        ));\n    }\n    throw new Error(`arr2date: length must be 3, 6 or 7, but is ${arr.length}`);\n};\n\nexport const arr2cardNumber = (arr) => {\n    if (arr.length === 4 || arr.length === 3) {\n        var cardnum = (arr[1] << 8) | arr[0];\n        var fourthSet = (arr.length === 4 && arr[3] !== 0x00);\n        if (!fourthSet && 1 < arr[2] && arr[2] <= 4) {\n            cardnum += (arr[2] * 100000);\n        } else if (fourthSet || 4 < arr[2]) {\n            cardnum += (arr[2] << 16);\n        }\n        if (arr.length === 4) {\n            cardnum |= (arr[3] << 24);\n        }\n        return cardnum;\n    }\n    throw new Error(`arr2cardNumber: length must be 3 or 4, but is ${arr.length}`);\n};\n\nexport const prettyHex = (input) => {\n    if (typeof input === 'string') {\n        const out = [];\n        let i;\n        for (i = 0; i < input.length; i++) {\n            out.push((`00${input.charCodeAt(i).toString(16)}`).slice(-2));\n        }\n        return out.join(' ').toUpperCase();\n    }\n    const convertToArray = (iterable) => [].slice.call(iterable);\n    return convertToArray(input)\n        .map((byte) => `00${byte.toString(16)}`)\n        .map((paddedStr) => paddedStr.slice(-2))\n        .join(' ').toUpperCase();\n};\n\nexport const CRC16 = (str) => {\n    var CRC_POLYNOM = 0x8005;\n    var CRC_BITF = 0x8000;\n    if (str.length < 3) {\n        return [(1 <= str.length ? str[0] : 0x00), (2 <= str.length ? str[1] : 0x00)];\n    }\n    const s = str.length % 2 === 0 ? str.concat([0x00, 0x00]) : str.concat([0x00]);\n    var crc = s[0] * 0x100 + s[1];\n    for (var i = 2; i < s.length; i += 2) {\n        var c = s.slice(i, i + 2);\n        var val = c[0] * 0x100 + c[1];\n        for (var j = 0; j < 16; j++) {\n            if ((crc & CRC_BITF) !== 0) {\n                crc = (crc << 1);\n                if ((val & CRC_BITF) !== 0) {\n                    crc += 1;\n                }\n                crc = (crc ^ CRC_POLYNOM);\n            } else {\n                crc = (crc << 1);\n                if ((val & CRC_BITF) !== 0) {\n                    crc += 1;\n                }\n            }\n            val = (val << 1);\n        }\n        crc = (crc & 0xFFFF);\n    }\n    return [(crc >> 8), (crc & 0xFF)];\n};\n\nexport const processSiProto = (inputData) => {\n    let command, parameters;\n    while (command === undefined) {\n        if (inputData.length === 0) {\n            return null;\n        }\n        if (inputData[0] === proto.ACK) {\n            inputData.splice(0, 1);\n            continue; // eslint-disable-line no-continue\n        }\n        if (inputData[0] === proto.NAK) {\n            inputData.splice(0, 1);\n            return {\n                mode: proto.NAK,\n                command: null,\n                parameters: [],\n            };\n        }\n        if (inputData[0] === proto.WAKEUP) {\n            inputData.splice(0, 1);\n            continue; // eslint-disable-line no-continue\n        }\n        if (inputData[0] !== proto.STX) {\n            console.warn(`Invalid start byte: ${prettyHex([inputData[0]])}`);\n            inputData.splice(0, 1);\n            continue; // eslint-disable-line no-continue\n        }\n        if (inputData.length < 6) {\n            return null;\n        }\n        command = inputData[1];\n        var len = inputData[2];\n        if (inputData.length < 6 + len) {\n            return null;\n        }\n        if (inputData[5 + len] !== proto.ETX) {\n            console.warn(`Invalid end byte: ${prettyHex([inputData[5 + len]])}`);\n            inputData.splice(0, 1);\n            continue; // eslint-disable-line no-continue\n        }\n        parameters = inputData.slice(3, 3 + len);\n        var crcContent = CRC16(inputData.slice(1, 3 + len));\n        var crc = inputData.slice(3 + len, 5 + len);\n        inputData.splice(0, 6 + len);\n        if (crc[0] !== crcContent[0] || crc[1] !== crcContent[1]) {\n            console.debug(`Invalid Command received.\n    CMD:0x${prettyHex([command])}\n    LEN:${len}\n    PARAMS:${prettyHex(parameters)}\n    CRC:${prettyHex(crc)}\n    Content-CRC:${prettyHex(crcContent)}`);\n            continue; // eslint-disable-line no-continue\n        }\n    }\n    return {\n        mode: proto.STX,\n        command: command,\n        parameters: parameters,\n    };\n};\n\nexport const buildSiProtoCommand = (message) => {\n    var commandString = [message.command, message.parameters.length].concat(message.parameters);\n    var crc = CRC16(commandString);\n    var cmd = String.fromCharCode(proto.STX);\n    let i;\n    for (i = 0; i < commandString.length; i++) {\n        cmd += String.fromCharCode(commandString[i]);\n    }\n    for (i = 0; i < crc.length; i++) {\n        cmd += String.fromCharCode(crc[i]);\n    }\n    cmd += String.fromCharCode(proto.ETX);\n    return cmd;\n};\n\nexport const timeoutResolvePromise = (value, timeout = 1) =>\n    new Promise((resolve, _reject) =>\n        setTimeout(() => resolve(value), timeout));\n\nexport const timeoutRejectPromise = (reason, timeout) =>\n    new Promise((resolve, _reject) =>\n        setTimeout(() => resolve(reason), timeout));\n"],"sourceRoot":""}